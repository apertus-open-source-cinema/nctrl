camera_model: "test_model"

devices:
    test_mmap:
        channel:
            mode: "memory-map"
            base: 0x41200000
            len: 4096
        raw: "sensor_io_raw.yml"
        cooked: "sensor_io_cooked.yml"
    test_spi:
        channel:
            mode: "spi"
    test_i2c:
        channel:
            mode: "i2c-cdev"
            bus: 0
            address: 0x10
            address_bytes: 2
        raw: "ar0330_raw.yml"
        cooked: "ar0330_cooked.yml"
        computed: "ar0330_computed.yml"

globals:
  test_int: 24000000
  test_float: 3.1415
  test_string: "testtesttest"
  test_script: |
    function (reg_a, reg_b)
       return reg_a * reg_b
    end
  test_nested_script: gain(1, 2)

scripts:
  test_raw_access:
  test_cooked_access:
  test_scripted_access:
  test_global_constant_access:
  test_global_lua_access:
  test_lua_script_call:
  test_called_by_lua:
  test_rust_script_call:
  test_called_by_rust:
  test_int_argument:
  test_float_argument:
  test_string_argument:
  test_bytes_argument:
  test_nested_lua_access:
    description:
    uses:
      - ar0330
      - sensor_io
    script: |
      sensor_io.raw.reset = 7
      sensor_io.raw.reset = 0
      sensor_io.raw.reset = 7
      ar0330.computed.analog_gain = 2

      scripts.kick(devices)
      print("hello from lua: " .. scripts.test2(devices))
      print("now running a rust script from lua " .. scripts.rust_test(devices, {test = "riea"}))

      return extclock .. ", " .. scripts.test2(devices)

  test2:
    description:
    uses:
      - ar0330
    script: |
      print("testing lua to lua argument passing", scripts.test3(devices, {a = 1, b = 34.7, c = "abcd", d = {}}))
      return ar0330.computed.analog_gain

  test3:
    description:
    uses:
      - ar0330
    script: |
      print("a", a)
      print("b", b)
      print("c", c)
      print("d", d)
      ar0330.raw.analog_gain = 3
      return ar0330.computed.analog_gain
    args:
      a: int
      b: float
      c: string
      d: binary


init: |
  ar0330.computed.analog_gain = 2
