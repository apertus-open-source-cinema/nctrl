# SPDX-FileCopyrightText: Â© 2019 Robin Ole Heinemann <robin.ole.heinemann@gmail.com>
# SPDX-License-Identifier: CC-BY-SA-4.0

camera_model: "beta"

devices:
    cmv12000:
        channel:
            mode: "cmv-spi-bridge"
            base: 0x60000000
            len: 0x00020000
        raw: "cmv12000_raw.yml"
        cooked: "cmv12000_cooked.yml"
        computed: "cmv12000_computed.yml"
    capture_control_address_generator:
        channel:
            mode: "memory-map"
            base: 0x60100000
            len: 0x00020000
        cooked: "capture_control_address_generator_cooked.yml"
    lvds_input_delay:
        channel:
            mode: "memory-map"
            base: 0x60200000
            len: 0x00020000
        cooked: "lvds_input_delay_cooked.yml"
    # rcn_noise_lut:
    #     channel:
    #         mode: "memory-map"
    #         base: 0x60300000
    #         len: 0x00020000
    #     cooked: "rcn_noise_lut_cooked.yml"
#     linearization_lut:
#         channel:
#             mode: "memory-map"
#             base: 0x60500000
#             len: 0x00020000
# #        raw: "linearization_lut_raw.yml"    expose as one big register
#         cooked: "linearization_lut_cooked.yml"
    display_scan_generator:
        channel:
            mode: "memory-map"
            base: 0x80000000
            len: 0x00020000
#        raw: "display_scan_generator_raw.yml"
        cooked: "display_scan_generator_cooked.yml"
#    display_control_address_generator:
#        channel:
#            mode: "memory-map"
#            base: 0x80100000
#            len: 0x00020000
#        raw: "display_control_address_generator_raw.yml"
#        cooked: "display_control_address_generator_cooked.yml"
#    component_matrix:
#        channel:
#            mode: "memory-map"
#            base: 0x80200000
#            len: 0x00020000
#        raw: "component_matrix_raw.yml"
#        cooked: "component_matrix_cooked.yml"
#    gamma_correction_luts:
#        channel:
#            mode: "memory-map"
#            base: 0x80300000
#            len: 0x00020000
#        raw: "gamma_correction_luts_raw.yml"
#        cooked: "gamma_correction_luts_cooked.yml"
#    hdmi_pll_reconf:
#        channel:
#            mode: "memory-map"
#            base: 0x80400000
#            len: 0x00020000
#        raw: "hdmi_pll_reconf_raw.yml"
#        cooked: "hdmi_pll_reconf_cooked.yml"
#    illumination_control:
#        channel:
#            mode: "memory-map"
#            base: 0x80500000
#            len: 0x00020000
#        raw: "illumination_control_raw.yml"
#        cooked: "illumination_control_cooked.yml"

globals:
  lvds_clk: 250e6 # MHz
  pixel_bits: 12 # number of bits per pixel

scripts:
    check_axiom_service_status:
        description:
        script: |
            result = "false"
            local f=io.open("/tmp/axiom.started","r")
            if f~=nil then
                io.close(f)
                result = "true"
            end
            return result
